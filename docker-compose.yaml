version: "3.9"
services:
  geohub:
    build: .
    restart: unless-stopped
    labels:
      caddy: geo.elkis.org
      caddy.reverse_proxy: "{{upstreams 3000}}"
      ofelia.enabled: "true"
      ofelia.job-exec.datecron.schedule: "0 0 4 * * *"
      ofelia.job-exec.datecron.command: "wget http://127.0.0.1:3000/api/cron/create-daily-challenge"
    networks:
      - caddy
    env_file:
      - .env
    environment:
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017
    volumes:
      - ./:/usr/src/app
      - .env:/usr/src/app/.env
    # command: "-f /dev/null"
    # entrypoint: /usr/bin/tail
    # tty: true

  ofelia:
    image: mcuadros/ofelia:latest
    restart: unless-stopped
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    networks:
      - caddy
    env_file:
      - .env
    volumes:
      - ./database:/data/db

  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    restart: unless-stopped

networks:
  caddy:
    name: caddy

volumes:
  caddy_data: {}
